{"version":3,"sources":["utils/history.js","store/actions/action_types.js","components/Payments.js","store/actions/actions.js","components/header.js","components/Landing.js","router/routes.js","components/App.js","store/reducers/authReducer.js","store/reducers/index.js","index.js"],"names":["createBrowserHistory","FETCH_USER","Payments","props","dispatch","useDispatch","name","description","amount","token","a","axios","post","res","console","log","data","type","payload","handleCreditToken","stripeKey","process","className","style","cursor","connect","auth","user","RenderContent","href","margin","credits","to","Landing","textAlign","Routes","history","exact","path","component","App","useEffect","get","initialState","AuthReducer","state","action","RootReducer","combineReducers","store","createStore","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"0KAGgBA,gB,0ECHHC,EAAc,aC8BXC,EAxBE,SAACC,GAEhB,IAAMC,EAAWC,cAIhB,OAEG,cAAC,IAAD,CACAC,KAAK,SACLC,YAAY,yBACZC,OAAQ,IACRC,MAAO,SAAAA,GAAK,OAAIL,ECHU,SAACK,GAAD,8CAAW,WAAML,GAAN,eAAAM,EAAA,sEAEtBC,IAAMC,KAAK,cAAcH,GAFH,OAElCI,EAFkC,OAIxCC,QAAQC,IAAI,4CAA4CF,EAAIG,MAE5DZ,EAAS,CAACa,KAAKhB,EAAYiB,QAASL,EAAIG,OANA,2CAAX,sDDGDG,CAAkBV,KAC3CW,UAAWC,8GALX,SAOI,wBAAQC,UAAU,MAAMC,MAAO,CAACC,OAAO,WAAvC,4BEiDIC,eARS,SAAC,GACrB,MAAM,CACFC,KAF0B,EAARA,KAENC,QAMLF,EAjEA,SAACtB,GAIZ,IAAMyB,EAAe,WAGjB,OAAQzB,EAAMuB,MACV,KAAK,KACD,OAAO,uBAEX,KAAK,EAED,OACI,6BAAI,mBAAGG,KAAK,eAAR,iCAGZ,QACI,MAAO,CACA,mCAAc,cAAC,EAAD,MAAN,KACR,qBAAYN,MAAO,CAACO,OAAO,UAA3B,wBAAkD3B,EAAMuB,KAAKK,QAA7D,MAAQ,KACP,6BAAY,mBAAGF,KAAK,cAAR,qBAAJ,QAU5B,OACI,8BACI,sBAAKP,UAAU,cAAf,UAEI,cAAC,IAAD,CAAMU,GAAI7B,EAAMuB,KAAM,WAAa,IAC7BJ,UAAU,kBADhB,oBASI,oBAAIA,UAAU,QAAd,SAEE,cAACM,EAAD,cCzCPK,EAVC,SAAC9B,GACb,OACI,sBAAKoB,MAAO,CAACW,UAAU,UAAvB,UACI,mDADJ,sCCwBOC,EApBA,WAMX,OACG,qBAAKb,UAAU,YAAf,SACK,eAAC,IAAD,CAASc,QAASA,EAAlB,UACG,cAAC,EAAD,IACC,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAKC,UAAWN,IAClC,cAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,WAAYC,UAV5B,kBAAM,8CAWR,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,eAAgBC,UAVhC,kBAAM,wDCiBZC,EApBJ,SAACrC,GAGT,IAAMC,EAAWC,cAQjB,OAJAoC,qBAAU,WACNrC,EJTkB,uCAAM,WAAMA,GAAN,eAAAM,EAAA,sEAETC,IAAM+B,IAAI,qBAFD,OAEtB7B,EAFsB,OAI5BT,EAAS,CAACa,KAAKhB,EAAYiB,QAASL,EAAIG,OAJZ,2CAAN,yDIUpB,CAACZ,IAGC,8BACI,cAAC,EAAD,O,wBChBNuC,EAAe,CACjBhB,KAAO,MAiBIiB,EAbK,WAAkC,IAAjCC,EAAgC,uDAAxBF,EAAeG,EAAS,uCAEjD,OADAhC,QAAQC,IAAI+B,GACJA,EAAO7B,MACX,KAAKhB,EACD,kCACO4C,GADP,IAEIlB,KAAMmB,EAAO5B,UAAW,IAGhC,QAAS,OAAO2B,ICRTE,EAJKC,YAAgB,CAC5BtB,KAAOkB,ICOTK,EAAQC,YAAYH,EAAa,GAAGI,YAAgBC,MAG1DC,IAASC,OACL,cAAC,IAAMC,WAAP,UACG,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACK,cAAC,EAAD,QAINO,SAASC,cAAc,Y","file":"static/js/main.f67c8136.chunk.js","sourcesContent":["\r\n import {createBrowserHistory} from 'history';\r\n\r\n export default createBrowserHistory();","export const FETCH_USER  = \"FETCH_USER\";","\r\nimport { useDispatch } from 'react-redux';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport { handleCreditToken } from '../store/actions/actions';\r\n\r\n\r\n const Payments = (props) =>{\r\n\r\n   const dispatch = useDispatch();\r\n\r\n    // debugger; // to debug the file and values \r\n\r\n    return(\r\n\r\n       <StripeCheckout \r\n       name='Emaily'\r\n       description='$5 for 5 email credits'\r\n       amount={500} // money amount in cents\r\n       token={token => dispatch(handleCreditToken(token))}\r\n       stripeKey={process.env.REACT_APP_STRIPE_KEY}\r\n       >\r\n           <button className='btn' style={{cursor:'pointer'}}> \r\n                Add Credits\r\n           </button>\r\n           </StripeCheckout>\r\n           \r\n\r\n    )\r\n }\r\n\r\n export default Payments;","import axios  from 'axios';\r\nimport {FETCH_USER} from './action_types';\r\n\r\n\r\n\r\nexport const fetchUser =  () => async dispatch => {\r\n\r\n    const res =  await axios.get('/api/current_user');\r\n\r\n    dispatch({type:FETCH_USER, payload: res.data});\r\n\r\n    } \r\n   \r\n \r\n\r\nexport const handleCreditToken = (token) => async dispatch =>{\r\n\r\n    const res = await axios.post('/api/stripe',token);\r\n\r\n    console.log('coming res from stripe confirmatoin is : ',res.data);\r\n\r\n    dispatch({type:FETCH_USER, payload: res.data});\r\n}\r\n\r\n","import {connect} from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Payments from './Payments';\r\n\r\n\r\nconst Header = (props) =>{\r\n\r\n\r\n\r\n    const RenderContent= ()=>{\r\n\r\n\r\n        switch (props.auth) {\r\n            case null:\r\n                return <li></li>;\r\n        \r\n            case false:\r\n                \r\n                return(\r\n                    <li><a href='/auth/google'>Login with Google</a></li>\r\n                );\r\n        \r\n            default:\r\n                return [\r\n                       <li key='1' > <Payments  /></li>,\r\n                       <li key='2' style={{margin:'0 10px'}}> Credits : {props.auth.credits} </li>,\r\n                        <li key='3'><a href='/api/logout'>logout</a></li>\r\n                    ];\r\n                   \r\n        }\r\n\r\n        }\r\n\r\n\r\n    \r\n \r\n    return(\r\n        <nav>\r\n            <div className='nav-wrapper'>\r\n               \r\n                <Link to={props.auth? '/surveys' : '/'} \r\n                      className='left brand-logo'\r\n                      >\r\n                        Emaily\r\n                </Link>\r\n               \r\n               \r\n                \r\n                    \r\n                    <ul className='right'>\r\n                   \r\n                      <RenderContent />\r\n                    </ul>\r\n                   \r\n                  \r\n                   \r\n\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({auth})=>{\r\n    return{\r\n        auth : auth.user\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect (mapStateToProps)(Header);","const Landing = (props)=>{\r\n    return (\r\n        <div style={{textAlign:'center'}}>\r\n            <h2>\r\n                Emaily Landing ;)\r\n            </h2>\r\n            Collect feedback from users ...\r\n        </div>\r\n    )\r\n}\r\nexport default Landing;","\r\nimport {Router , Route, Switch} from 'react-router-dom';\r\nimport history from '../utils/history';\r\nimport Header from '../components/header';\r\nimport Landing from '../components/Landing';\r\n\r\nconst Routes = () =>{\r\n\r\n    const Dashboard = () => <h4>Dashboard</h4>\r\n    const SurveyNew = () => <h4>New survey</h4>\r\n\r\n\r\n    return(\r\n       <div className='container' >{/* solely for css work */}\r\n            <Router  history={history}> \r\n               <Header/>\r\n                <Switch>\r\n                    <Route exact path='/'  component={Landing}/>\r\n                    <Route exact path='/surveys'  component={Dashboard}/>\r\n                    <Route exact path='/surveys/new'  component={SurveyNew}/>\r\n                </Switch>\r\n            </Router>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Routes; ","import { useEffect } from \"react\";\r\nimport Routes from \"../router/routes\"\r\nimport { useDispatch} from 'react-redux';\r\nimport * as actions from '../store/actions/actions'\r\n\r\n\r\nconst App = (props) =>{\r\n\r\n\r\n    const dispatch = useDispatch(); /// instead of useing connect method on the component ;\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        dispatch(actions.fetchUser()); \r\n    },[dispatch])\r\n\r\n    return (\r\n        <div>\r\n            <Routes />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default  App ; // actions referes to action creators ","import {FETCH_USER} from '../actions/action_types';\r\n\r\n\r\nconst initialState = { \r\n    user : null\r\n}\r\n\r\n\r\nconst AuthReducer = (state = initialState , action)=>{\r\n    console.log(action);\r\n    switch (action.type) {\r\n        case FETCH_USER:\r\n            return{\r\n                ...state,\r\n                user: action.payload || false // if there is a string, take it, empty string? take the false \r\n            }\r\n    \r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default AuthReducer ; ","import {combineReducers} from 'redux';\r\nimport AuthReducer from './authReducer';\r\n\r\n\r\n\r\nconst RootReducer = combineReducers({\r\n        auth : AuthReducer,\r\n})\r\n\r\nexport default RootReducer;","import React from 'react';\r\n\r\nimport 'materialize-css/dist/css/materialize.min.css';\r\n\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport reduxThunk from 'redux-thunk';\r\nimport RootReducer from './store/reducers';\r\n\r\n\r\nconst store = createStore(RootReducer, {},applyMiddleware(reduxThunk));\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n       <Provider store={store}>\r\n            <App />\r\n       </Provider>\r\n    </React.StrictMode>\r\n\r\n    , document.querySelector('#root')\r\n)\r\n"],"sourceRoot":""}